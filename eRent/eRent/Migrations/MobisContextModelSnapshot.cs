// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eRent.Database;

namespace eRent.Migrations
{
    [DbContext(typeof(MobisContext))]
    partial class MobisContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("eRent.Database.Autorizacija", b =>
                {
                    b.Property<int>("AutorizacijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutorizacijaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BrisiFunkcija")
                        .HasColumnType("bit");

                    b.Property<bool?>("CitajFunkcija")
                        .HasColumnType("bit");

                    b.Property<bool?>("DodajFunkcija")
                        .HasColumnType("bit");

                    b.Property<int>("KorisnikId")
                        .HasColumnName("KorisnikID")
                        .HasColumnType("int");

                    b.Property<bool?>("UrediFunkcija")
                        .HasColumnType("bit");

                    b.HasKey("AutorizacijaId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Autorizacija");
                });

            modelBuilder.Entity("eRent.Database.Boravak", b =>
                {
                    b.Property<int>("BoravakId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("BoravakID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BoravioDo")
                        .HasColumnType("date");

                    b.Property<DateTime>("BoravioOd")
                        .HasColumnType("date");

                    b.Property<string>("Komentar")
                        .HasColumnType("text");

                    b.Property<int?>("Ocjena")
                        .HasColumnType("int");

                    b.Property<int>("RezervacijaId")
                        .HasColumnName("RezervacijaID")
                        .HasColumnType("int");

                    b.HasKey("BoravakId");

                    b.HasIndex("RezervacijaId");

                    b.ToTable("Boravak");
                });

            modelBuilder.Entity("eRent.Database.Cjenovnik", b =>
                {
                    b.Property<int>("CjenovnikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CjenovnikID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cijena")
                        .HasColumnType("float");

                    b.Property<int>("ObjekatId")
                        .HasColumnName("ObjekatID")
                        .HasColumnType("int");

                    b.Property<DateTime>("VaziDo")
                        .HasColumnType("date");

                    b.Property<DateTime>("VaziOd")
                        .HasColumnType("date");

                    b.HasKey("CjenovnikId");

                    b.HasIndex("ObjekatId");

                    b.ToTable("Cjenovnik");
                });

            modelBuilder.Entity("eRent.Database.Drzava", b =>
                {
                    b.Property<int>("DrzavaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DrzavaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("DrzavaId");

                    b.ToTable("Drzava");
                });

            modelBuilder.Entity("eRent.Database.Grad", b =>
                {
                    b.Property<int>("GradId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("GradID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DrzavaId")
                        .HasColumnName("DrzavaID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("GradId");

                    b.HasIndex("DrzavaId");

                    b.ToTable("Grad");
                });

            modelBuilder.Entity("eRent.Database.Kategorija", b =>
                {
                    b.Property<int>("KategorijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("KategorijaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NazivKategorije")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("KategorijaId");

                    b.ToTable("Kategorija");
                });

            modelBuilder.Entity("eRent.Database.Korisnik", b =>
                {
                    b.Property<int>("KorisnikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("KorisnikID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<bool?>("Aktivan")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int>("GradId")
                        .HasColumnName("GradID")
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int>("UlogaId")
                        .HasColumnName("UlogaID")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("KorisnikId");

                    b.HasIndex("GradId");

                    b.HasIndex("UlogaId");

                    b.ToTable("Korisnik");
                });

            modelBuilder.Entity("eRent.Database.Objekat", b =>
                {
                    b.Property<int>("ObjekatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ObjekatID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<bool>("Aktivan")
                        .HasColumnType("bit");

                    b.Property<string>("BrTelefona")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int>("GradId")
                        .HasColumnName("GradID")
                        .HasColumnType("int");

                    b.Property<int>("KategorijaId")
                        .HasColumnName("KategorijaID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<bool>("Rezervisano")
                        .HasColumnType("bit");

                    b.Property<int>("TipObjektaId")
                        .HasColumnName("TipObjektaID")
                        .HasColumnType("int");

                    b.Property<int>("VlasnikId")
                        .HasColumnName("VlasnikID")
                        .HasColumnType("int");

                    b.HasKey("ObjekatId");

                    b.HasIndex("KategorijaId");

                    b.HasIndex("TipObjektaId");

                    b.HasIndex("VlasnikId");

                    b.ToTable("Objekat");
                });

            modelBuilder.Entity("eRent.Database.ObjekatSlike", b =>
                {
                    b.Property<int>("ObjekatSlikeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ObjekatSlikeID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ObjekatId")
                        .HasColumnName("ObjekatID")
                        .HasColumnType("int");

                    b.Property<byte[]>("ObjekatSlike1")
                        .HasColumnName("ObjekatSLike")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("ObjekatSlikeId");

                    b.HasIndex("ObjekatId");

                    b.ToTable("ObjekatSlike");
                });

            modelBuilder.Entity("eRent.Database.Rezervacija", b =>
                {
                    b.Property<int>("RezervacijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RezervacijaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BrojMjestaDjeca")
                        .HasColumnType("int");

                    b.Property<int?>("BrojMjestaOdrasli")
                        .HasColumnType("int");

                    b.Property<double>("Cijena")
                        .HasColumnType("float");

                    b.Property<int>("CjenovikId")
                        .HasColumnName("CjenovikID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumOdjave")
                        .HasColumnType("date");

                    b.Property<DateTime>("DatumPrijave")
                        .HasColumnType("date");

                    b.Property<DateTime>("DatumRezervacije")
                        .HasColumnType("date");

                    b.Property<int>("GostId")
                        .HasColumnName("GostID")
                        .HasColumnType("int");

                    b.Property<int>("KorisnikId")
                        .HasColumnName("KorisnikID")
                        .HasColumnType("int");

                    b.Property<int>("ObjekatId")
                        .HasColumnName("ObjekatID")
                        .HasColumnType("int");

                    b.Property<double>("Vrijednost")
                        .HasColumnType("float");

                    b.HasKey("RezervacijaId");

                    b.HasIndex("GostId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("ObjekatId");

                    b.ToTable("Rezervacija");
                });

            modelBuilder.Entity("eRent.Database.TipObjektum", b =>
                {
                    b.Property<int>("TipObjektaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TipObjektaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MaxKapacitet")
                        .HasColumnType("int");

                    b.Property<string>("Tip")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("TipObjektaId")
                        .HasName("PK__TipObjek__B4E3931421868EC0");

                    b.ToTable("TipObjekta");
                });

            modelBuilder.Entity("eRent.Database.Uloga", b =>
                {
                    b.Property<int>("UlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UlogaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("UlogaId");

                    b.ToTable("Uloga");
                });

            modelBuilder.Entity("eRent.Database.Autorizacija", b =>
                {
                    b.HasOne("eRent.Database.Korisnik", "Korisnik")
                        .WithMany("Autorizacijas")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("fk_autorizacija_korisnik")
                        .IsRequired();
                });

            modelBuilder.Entity("eRent.Database.Boravak", b =>
                {
                    b.HasOne("eRent.Database.Rezervacija", "Rezervacija")
                        .WithMany("Boravaks")
                        .HasForeignKey("RezervacijaId")
                        .HasConstraintName("fk_boravak_rezervacija")
                        .IsRequired();
                });

            modelBuilder.Entity("eRent.Database.Cjenovnik", b =>
                {
                    b.HasOne("eRent.Database.Objekat", "Objekat")
                        .WithMany("Cjenovniks")
                        .HasForeignKey("ObjekatId")
                        .HasConstraintName("fk_Objekat_Cjenovnik")
                        .IsRequired();
                });

            modelBuilder.Entity("eRent.Database.Grad", b =>
                {
                    b.HasOne("eRent.Database.Drzava", "Drzava")
                        .WithMany("Grads")
                        .HasForeignKey("DrzavaId")
                        .HasConstraintName("fk_grad_drzava")
                        .IsRequired();
                });

            modelBuilder.Entity("eRent.Database.Korisnik", b =>
                {
                    b.HasOne("eRent.Database.Grad", "Grad")
                        .WithMany("Korisniks")
                        .HasForeignKey("GradId")
                        .HasConstraintName("fk_korisnik_grad")
                        .IsRequired();

                    b.HasOne("eRent.Database.Uloga", "Uloga")
                        .WithMany("Korisniks")
                        .HasForeignKey("UlogaId")
                        .HasConstraintName("fk_korisnik_uloga")
                        .IsRequired();
                });

            modelBuilder.Entity("eRent.Database.Objekat", b =>
                {
                    b.HasOne("eRent.Database.Kategorija", "Kategorija")
                        .WithMany("Objekats")
                        .HasForeignKey("KategorijaId")
                        .HasConstraintName("fk_kategorija_objekat")
                        .IsRequired();

                    b.HasOne("eRent.Database.TipObjektum", "TipObjekta")
                        .WithMany("Objekats")
                        .HasForeignKey("TipObjektaId")
                        .HasConstraintName("fk_objekat_tip")
                        .IsRequired();

                    b.HasOne("eRent.Database.Korisnik", "Vlasnik")
                        .WithMany("Objekats")
                        .HasForeignKey("VlasnikId")
                        .HasConstraintName("fk_vlasnik_objekat")
                        .IsRequired();
                });

            modelBuilder.Entity("eRent.Database.ObjekatSlike", b =>
                {
                    b.HasOne("eRent.Database.Objekat", "Objekat")
                        .WithMany("ObjekatSlikes")
                        .HasForeignKey("ObjekatId")
                        .HasConstraintName("fk_objekat_slike")
                        .IsRequired();
                });

            modelBuilder.Entity("eRent.Database.Rezervacija", b =>
                {
                    b.HasOne("eRent.Database.Korisnik", "Gost")
                        .WithMany("RezervacijaGosts")
                        .HasForeignKey("GostId")
                        .HasConstraintName("fk_rez_gost")
                        .IsRequired();

                    b.HasOne("eRent.Database.Korisnik", "Korisnik")
                        .WithMany("RezervacijaKorisniks")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("fk_rez_korisnik")
                        .IsRequired();

                    b.HasOne("eRent.Database.Objekat", "Objekat")
                        .WithMany("Rezervacijas")
                        .HasForeignKey("ObjekatId")
                        .HasConstraintName("fk_rez_obje")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
